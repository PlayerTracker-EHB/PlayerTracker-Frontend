/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as UploaderImport } from './routes/Uploader'
import { Route as TeamImport } from './routes/Team'
import { Route as SubscriptionsImport } from './routes/Subscriptions'
import { Route as StatisticsImport } from './routes/Statistics'
import { Route as RegisterImport } from './routes/Register'
import { Route as MyAdminImport } from './routes/MyAdmin'
import { Route as LoginImport } from './routes/Login'
import { Route as AccountsImport } from './routes/Accounts'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const UploaderRoute = UploaderImport.update({
  id: '/Uploader',
  path: '/Uploader',
  getParentRoute: () => rootRoute,
} as any)

const TeamRoute = TeamImport.update({
  id: '/Team',
  path: '/Team',
  getParentRoute: () => rootRoute,
} as any)

const SubscriptionsRoute = SubscriptionsImport.update({
  id: '/Subscriptions',
  path: '/Subscriptions',
  getParentRoute: () => rootRoute,
} as any)

const StatisticsRoute = StatisticsImport.update({
  id: '/Statistics',
  path: '/Statistics',
  getParentRoute: () => rootRoute,
} as any)

const RegisterRoute = RegisterImport.update({
  id: '/Register',
  path: '/Register',
  getParentRoute: () => rootRoute,
} as any)

const MyAdminRoute = MyAdminImport.update({
  id: '/MyAdmin',
  path: '/MyAdmin',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/Login',
  path: '/Login',
  getParentRoute: () => rootRoute,
} as any)

const AccountsRoute = AccountsImport.update({
  id: '/Accounts',
  path: '/Accounts',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/Accounts': {
      id: '/Accounts'
      path: '/Accounts'
      fullPath: '/Accounts'
      preLoaderRoute: typeof AccountsImport
      parentRoute: typeof rootRoute
    }
    '/Login': {
      id: '/Login'
      path: '/Login'
      fullPath: '/Login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/MyAdmin': {
      id: '/MyAdmin'
      path: '/MyAdmin'
      fullPath: '/MyAdmin'
      preLoaderRoute: typeof MyAdminImport
      parentRoute: typeof rootRoute
    }
    '/Register': {
      id: '/Register'
      path: '/Register'
      fullPath: '/Register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/Statistics': {
      id: '/Statistics'
      path: '/Statistics'
      fullPath: '/Statistics'
      preLoaderRoute: typeof StatisticsImport
      parentRoute: typeof rootRoute
    }
    '/Subscriptions': {
      id: '/Subscriptions'
      path: '/Subscriptions'
      fullPath: '/Subscriptions'
      preLoaderRoute: typeof SubscriptionsImport
      parentRoute: typeof rootRoute
    }
    '/Team': {
      id: '/Team'
      path: '/Team'
      fullPath: '/Team'
      preLoaderRoute: typeof TeamImport
      parentRoute: typeof rootRoute
    }
    '/Uploader': {
      id: '/Uploader'
      path: '/Uploader'
      fullPath: '/Uploader'
      preLoaderRoute: typeof UploaderImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/Accounts': typeof AccountsRoute
  '/Login': typeof LoginRoute
  '/MyAdmin': typeof MyAdminRoute
  '/Register': typeof RegisterRoute
  '/Statistics': typeof StatisticsRoute
  '/Subscriptions': typeof SubscriptionsRoute
  '/Team': typeof TeamRoute
  '/Uploader': typeof UploaderRoute
  '/about': typeof AboutRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/Accounts': typeof AccountsRoute
  '/Login': typeof LoginRoute
  '/MyAdmin': typeof MyAdminRoute
  '/Register': typeof RegisterRoute
  '/Statistics': typeof StatisticsRoute
  '/Subscriptions': typeof SubscriptionsRoute
  '/Team': typeof TeamRoute
  '/Uploader': typeof UploaderRoute
  '/about': typeof AboutRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/Accounts': typeof AccountsRoute
  '/Login': typeof LoginRoute
  '/MyAdmin': typeof MyAdminRoute
  '/Register': typeof RegisterRoute
  '/Statistics': typeof StatisticsRoute
  '/Subscriptions': typeof SubscriptionsRoute
  '/Team': typeof TeamRoute
  '/Uploader': typeof UploaderRoute
  '/about': typeof AboutRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/Accounts'
    | '/Login'
    | '/MyAdmin'
    | '/Register'
    | '/Statistics'
    | '/Subscriptions'
    | '/Team'
    | '/Uploader'
    | '/about'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/Accounts'
    | '/Login'
    | '/MyAdmin'
    | '/Register'
    | '/Statistics'
    | '/Subscriptions'
    | '/Team'
    | '/Uploader'
    | '/about'
  id:
    | '__root__'
    | '/'
    | '/Accounts'
    | '/Login'
    | '/MyAdmin'
    | '/Register'
    | '/Statistics'
    | '/Subscriptions'
    | '/Team'
    | '/Uploader'
    | '/about'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AccountsRoute: typeof AccountsRoute
  LoginRoute: typeof LoginRoute
  MyAdminRoute: typeof MyAdminRoute
  RegisterRoute: typeof RegisterRoute
  StatisticsRoute: typeof StatisticsRoute
  SubscriptionsRoute: typeof SubscriptionsRoute
  TeamRoute: typeof TeamRoute
  UploaderRoute: typeof UploaderRoute
  AboutRoute: typeof AboutRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AccountsRoute: AccountsRoute,
  LoginRoute: LoginRoute,
  MyAdminRoute: MyAdminRoute,
  RegisterRoute: RegisterRoute,
  StatisticsRoute: StatisticsRoute,
  SubscriptionsRoute: SubscriptionsRoute,
  TeamRoute: TeamRoute,
  UploaderRoute: UploaderRoute,
  AboutRoute: AboutRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/Accounts",
        "/Login",
        "/MyAdmin",
        "/Register",
        "/Statistics",
        "/Subscriptions",
        "/Team",
        "/Uploader",
        "/about"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/Accounts": {
      "filePath": "Accounts.tsx"
    },
    "/Login": {
      "filePath": "Login.tsx"
    },
    "/MyAdmin": {
      "filePath": "MyAdmin.tsx"
    },
    "/Register": {
      "filePath": "Register.tsx"
    },
    "/Statistics": {
      "filePath": "Statistics.tsx"
    },
    "/Subscriptions": {
      "filePath": "Subscriptions.tsx"
    },
    "/Team": {
      "filePath": "Team.tsx"
    },
    "/Uploader": {
      "filePath": "Uploader.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
