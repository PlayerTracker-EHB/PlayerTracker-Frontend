/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as GuestImport } from './routes/_guest'
import { Route as AuthImport } from './routes/_auth'
import { Route as GuestIndexImport } from './routes/_guest/index'
import { Route as GuestAboutImport } from './routes/_guest/about'
import { Route as GuestSubscriptionsImport } from './routes/_guest/Subscriptions'
import { Route as GuestRegisterImport } from './routes/_guest/Register'
import { Route as GuestLoginImport } from './routes/_guest/Login'
import { Route as AuthUploaderImport } from './routes/_auth/Uploader'
import { Route as AuthTeamImport } from './routes/_auth/Team'
import { Route as AuthStatisticsImport } from './routes/_auth/Statistics'
import { Route as AuthMatchStatsImport } from './routes/_auth/MatchStats'
import { Route as AuthAdminMyAdminImport } from './routes/_auth/admin/MyAdmin'
import { Route as AuthAdminAccountsImport } from './routes/_auth/admin/Accounts'

// Create/Update Routes

const GuestRoute = GuestImport.update({
  id: '/_guest',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const GuestIndexRoute = GuestIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => GuestRoute,
} as any)

const GuestAboutRoute = GuestAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => GuestRoute,
} as any)

const GuestSubscriptionsRoute = GuestSubscriptionsImport.update({
  id: '/Subscriptions',
  path: '/Subscriptions',
  getParentRoute: () => GuestRoute,
} as any)

const GuestRegisterRoute = GuestRegisterImport.update({
  id: '/Register',
  path: '/Register',
  getParentRoute: () => GuestRoute,
} as any)

const GuestLoginRoute = GuestLoginImport.update({
  id: '/Login',
  path: '/Login',
  getParentRoute: () => GuestRoute,
} as any)

const AuthUploaderRoute = AuthUploaderImport.update({
  id: '/Uploader',
  path: '/Uploader',
  getParentRoute: () => AuthRoute,
} as any)

const AuthTeamRoute = AuthTeamImport.update({
  id: '/Team',
  path: '/Team',
  getParentRoute: () => AuthRoute,
} as any)

const AuthStatisticsRoute = AuthStatisticsImport.update({
  id: '/Statistics',
  path: '/Statistics',
  getParentRoute: () => AuthRoute,
} as any)

const AuthMatchStatsRoute = AuthMatchStatsImport.update({
  id: '/MatchStats',
  path: '/MatchStats',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAdminMyAdminRoute = AuthAdminMyAdminImport.update({
  id: '/admin/MyAdmin',
  path: '/admin/MyAdmin',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAdminAccountsRoute = AuthAdminAccountsImport.update({
  id: '/admin/Accounts',
  path: '/admin/Accounts',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_guest': {
      id: '/_guest'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GuestImport
      parentRoute: typeof rootRoute
    }
    '/_auth/MatchStats': {
      id: '/_auth/MatchStats'
      path: '/MatchStats'
      fullPath: '/MatchStats'
      preLoaderRoute: typeof AuthMatchStatsImport
      parentRoute: typeof AuthImport
    }
    '/_auth/Statistics': {
      id: '/_auth/Statistics'
      path: '/Statistics'
      fullPath: '/Statistics'
      preLoaderRoute: typeof AuthStatisticsImport
      parentRoute: typeof AuthImport
    }
    '/_auth/Team': {
      id: '/_auth/Team'
      path: '/Team'
      fullPath: '/Team'
      preLoaderRoute: typeof AuthTeamImport
      parentRoute: typeof AuthImport
    }
    '/_auth/Uploader': {
      id: '/_auth/Uploader'
      path: '/Uploader'
      fullPath: '/Uploader'
      preLoaderRoute: typeof AuthUploaderImport
      parentRoute: typeof AuthImport
    }
    '/_guest/Login': {
      id: '/_guest/Login'
      path: '/Login'
      fullPath: '/Login'
      preLoaderRoute: typeof GuestLoginImport
      parentRoute: typeof GuestImport
    }
    '/_guest/Register': {
      id: '/_guest/Register'
      path: '/Register'
      fullPath: '/Register'
      preLoaderRoute: typeof GuestRegisterImport
      parentRoute: typeof GuestImport
    }
    '/_guest/Subscriptions': {
      id: '/_guest/Subscriptions'
      path: '/Subscriptions'
      fullPath: '/Subscriptions'
      preLoaderRoute: typeof GuestSubscriptionsImport
      parentRoute: typeof GuestImport
    }
    '/_guest/about': {
      id: '/_guest/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof GuestAboutImport
      parentRoute: typeof GuestImport
    }
    '/_guest/': {
      id: '/_guest/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof GuestIndexImport
      parentRoute: typeof GuestImport
    }
    '/_auth/admin/Accounts': {
      id: '/_auth/admin/Accounts'
      path: '/admin/Accounts'
      fullPath: '/admin/Accounts'
      preLoaderRoute: typeof AuthAdminAccountsImport
      parentRoute: typeof AuthImport
    }
    '/_auth/admin/MyAdmin': {
      id: '/_auth/admin/MyAdmin'
      path: '/admin/MyAdmin'
      fullPath: '/admin/MyAdmin'
      preLoaderRoute: typeof AuthAdminMyAdminImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthMatchStatsRoute: typeof AuthMatchStatsRoute
  AuthStatisticsRoute: typeof AuthStatisticsRoute
  AuthTeamRoute: typeof AuthTeamRoute
  AuthUploaderRoute: typeof AuthUploaderRoute
  AuthAdminAccountsRoute: typeof AuthAdminAccountsRoute
  AuthAdminMyAdminRoute: typeof AuthAdminMyAdminRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthMatchStatsRoute: AuthMatchStatsRoute,
  AuthStatisticsRoute: AuthStatisticsRoute,
  AuthTeamRoute: AuthTeamRoute,
  AuthUploaderRoute: AuthUploaderRoute,
  AuthAdminAccountsRoute: AuthAdminAccountsRoute,
  AuthAdminMyAdminRoute: AuthAdminMyAdminRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface GuestRouteChildren {
  GuestLoginRoute: typeof GuestLoginRoute
  GuestRegisterRoute: typeof GuestRegisterRoute
  GuestSubscriptionsRoute: typeof GuestSubscriptionsRoute
  GuestAboutRoute: typeof GuestAboutRoute
  GuestIndexRoute: typeof GuestIndexRoute
}

const GuestRouteChildren: GuestRouteChildren = {
  GuestLoginRoute: GuestLoginRoute,
  GuestRegisterRoute: GuestRegisterRoute,
  GuestSubscriptionsRoute: GuestSubscriptionsRoute,
  GuestAboutRoute: GuestAboutRoute,
  GuestIndexRoute: GuestIndexRoute,
}

const GuestRouteWithChildren = GuestRoute._addFileChildren(GuestRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof GuestRouteWithChildren
  '/MatchStats': typeof AuthMatchStatsRoute
  '/Statistics': typeof AuthStatisticsRoute
  '/Team': typeof AuthTeamRoute
  '/Uploader': typeof AuthUploaderRoute
  '/Login': typeof GuestLoginRoute
  '/Register': typeof GuestRegisterRoute
  '/Subscriptions': typeof GuestSubscriptionsRoute
  '/about': typeof GuestAboutRoute
  '/': typeof GuestIndexRoute
  '/admin/Accounts': typeof AuthAdminAccountsRoute
  '/admin/MyAdmin': typeof AuthAdminMyAdminRoute
}

export interface FileRoutesByTo {
  '': typeof AuthRouteWithChildren
  '/MatchStats': typeof AuthMatchStatsRoute
  '/Statistics': typeof AuthStatisticsRoute
  '/Team': typeof AuthTeamRoute
  '/Uploader': typeof AuthUploaderRoute
  '/Login': typeof GuestLoginRoute
  '/Register': typeof GuestRegisterRoute
  '/Subscriptions': typeof GuestSubscriptionsRoute
  '/about': typeof GuestAboutRoute
  '/': typeof GuestIndexRoute
  '/admin/Accounts': typeof AuthAdminAccountsRoute
  '/admin/MyAdmin': typeof AuthAdminMyAdminRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_guest': typeof GuestRouteWithChildren
  '/_auth/MatchStats': typeof AuthMatchStatsRoute
  '/_auth/Statistics': typeof AuthStatisticsRoute
  '/_auth/Team': typeof AuthTeamRoute
  '/_auth/Uploader': typeof AuthUploaderRoute
  '/_guest/Login': typeof GuestLoginRoute
  '/_guest/Register': typeof GuestRegisterRoute
  '/_guest/Subscriptions': typeof GuestSubscriptionsRoute
  '/_guest/about': typeof GuestAboutRoute
  '/_guest/': typeof GuestIndexRoute
  '/_auth/admin/Accounts': typeof AuthAdminAccountsRoute
  '/_auth/admin/MyAdmin': typeof AuthAdminMyAdminRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/MatchStats'
    | '/Statistics'
    | '/Team'
    | '/Uploader'
    | '/Login'
    | '/Register'
    | '/Subscriptions'
    | '/about'
    | '/'
    | '/admin/Accounts'
    | '/admin/MyAdmin'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/MatchStats'
    | '/Statistics'
    | '/Team'
    | '/Uploader'
    | '/Login'
    | '/Register'
    | '/Subscriptions'
    | '/about'
    | '/'
    | '/admin/Accounts'
    | '/admin/MyAdmin'
  id:
    | '__root__'
    | '/_auth'
    | '/_guest'
    | '/_auth/MatchStats'
    | '/_auth/Statistics'
    | '/_auth/Team'
    | '/_auth/Uploader'
    | '/_guest/Login'
    | '/_guest/Register'
    | '/_guest/Subscriptions'
    | '/_guest/about'
    | '/_guest/'
    | '/_auth/admin/Accounts'
    | '/_auth/admin/MyAdmin'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  GuestRoute: typeof GuestRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  GuestRoute: GuestRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_guest"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/MatchStats",
        "/_auth/Statistics",
        "/_auth/Team",
        "/_auth/Uploader",
        "/_auth/admin/Accounts",
        "/_auth/admin/MyAdmin"
      ]
    },
    "/_guest": {
      "filePath": "_guest.tsx",
      "children": [
        "/_guest/Login",
        "/_guest/Register",
        "/_guest/Subscriptions",
        "/_guest/about",
        "/_guest/"
      ]
    },
    "/_auth/MatchStats": {
      "filePath": "_auth/MatchStats.tsx",
      "parent": "/_auth"
    },
    "/_auth/Statistics": {
      "filePath": "_auth/Statistics.tsx",
      "parent": "/_auth"
    },
    "/_auth/Team": {
      "filePath": "_auth/Team.tsx",
      "parent": "/_auth"
    },
    "/_auth/Uploader": {
      "filePath": "_auth/Uploader.tsx",
      "parent": "/_auth"
    },
    "/_guest/Login": {
      "filePath": "_guest/Login.tsx",
      "parent": "/_guest"
    },
    "/_guest/Register": {
      "filePath": "_guest/Register.tsx",
      "parent": "/_guest"
    },
    "/_guest/Subscriptions": {
      "filePath": "_guest/Subscriptions.tsx",
      "parent": "/_guest"
    },
    "/_guest/about": {
      "filePath": "_guest/about.tsx",
      "parent": "/_guest"
    },
    "/_guest/": {
      "filePath": "_guest/index.tsx",
      "parent": "/_guest"
    },
    "/_auth/admin/Accounts": {
      "filePath": "_auth/admin/Accounts.tsx",
      "parent": "/_auth"
    },
    "/_auth/admin/MyAdmin": {
      "filePath": "_auth/admin/MyAdmin.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
